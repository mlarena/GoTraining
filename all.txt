Модуль 1. Основы языка Go  
Краткая история языка и цели создания
Настройка окружения и GOPATH 
     Windows
     Linux
Базовые типы данных и типизация
Практикум

Модуль 2. Управляющие конструкции  
Условный оператор
Оператор множественного выбора
Циклы в Go
Практикум

Модуль 3. Функции и паника  
Явные функции
Анонимные функции
Замыкания
Отложенный вызов
Паника и обработка паники
Практикум

Модуль 4. Структуры, методы и интерфейсы  
Основы структур
Создание структурных методов
Интерфейсы
Реализация ООП в Go
Пакеты
Практикум

Модуль 5. Многопроцессорное программирование  
Каналы и пайплайны
Контекст, таймер, таймаут
Мьютексы и состояние гонки
Практикум

Модуль 6. Динамические данные и тестирование  
Основы работы с JSON/YML
Рефлексия
Декомпозиция кода
Генерация кода
Профилирование
Модульные тесты и покрытие тестами
Практикум

Модуль 7. Основы работы с HTTP  
Идея HTTP
Пакет net
Обработка HTTP запросов
Тестирование HTTP запросов
Шаблоны и шаблонизация
Трассировка сервиса
Практикум


------------------------



Модуль 1. HTTP и REST  
HTTP как протокол
Архитектура REST
Идея API
Микросервисы
Преимущества микросервисов

Модуль 2. Простейшее REST API  
Создание прототипа микросервиса
Формирование url адресов
Структурирование запросов
Тестирование REST API
Практикум. Создание Калькулятора на основе REST API.

Модуль 3. Взаимодействие с базами данных  
Основы SQL
Рассмотрение СУБД на примере SQLite
Реализация CRUD в контексте API
Рефакторинг
Практикум. Сервис составления расписания для транспорта.

Модуль 4. Оптимизация хранилищ и использование ORM  
Знакомство с Gorm
Определение моделей и ресурсов
Создание тестовых окружений и сценариев тестирования
Реализация моделей через Gorm
Практикум. Сервис учета времени работы сотрудников.

Модуль 5. Создание и настройка современных CLI приложений  
Знакомство с пакетом cobra и viper
Создание конфигурационных файлов и консольных приложений
Тестирование CLI приложений
Практикум. Сервис – телефонная книга.

Модуль 6. Перенос приложения на удаленный сервер  
Идея облачных платформ
Знакомство с PaaS
Перенос приложения на сервер PaaS
Удаленное тестирование микросервиса (Thunder Client)
Публикация проекта


----------------------



Модуль 1. Знакомство со средой разработки  
Структура и инициализация проекта
Создание простейшей веб-страницы с Go и net/http
Настройка шаблонов и веб-формы в Go
Hugo – Static site generator

Модуль 2. Базы данных  
Описание структуры БД
Подключение PostgreSQL
Разработка модели и миграции
Откат версий
Применение реляционных БД в контексте проекта
Практикум. Создание банковского приложения.

Модуль 3. Пользовательское взаимодействие  
Описание механизмов Login\Logout
Аутентификация и регистрация
Настройка профилей и редактора
Современные механизмы аутентификации
Обработка ошибок и логирование
Практикум. Реализация механизмов пользовательского взаимодействия в БП.

Модуль 4. Расширение функционала  
Создание пользовательских моделей
Рефакторинг, кодогенерация
Обработка времени и дат
Практикум. Кодогенерация с использованием библиотеки SQLC в БП.

Модуль 5. Разработка через TDD  
Тестирование REST API.
Тестирование моделей данных.
Тестирование выполнения транзакций в PostgreSQL.
Практикум. Написание модульных тестов для БП.

Модуль 6. Расширение функционала путем добавления API  
Определение базового функционала API сервиса в применении к разработанному приложению.
Реализация API, основываясь на принципах REST.
Рекомендации по развитию и реализации проектов.
Практикум. Реализация REST API на фреймворке Gin.



----------------------


Модуль 1. GraphQL и NoSQL  
GraphQL - получение данныx
Структура приложения и создание демострационного проекта
Встраивание GraphQL в демонстрационный проект
Практикум. Создание web приложения «Каталог книг» на основе NoSQL DB

Модуль 2. Continuous integration / Continuous Integration (CI/CD)  
Continuous integration / Continuous Integration как важная составляющая проекта
Развертывание на PaaS сервере
Настройка автоматического обновления проекта через GitHub
Практикум. Deploy и настройка CI/CD с использование GitHub Actions(или аналоги)